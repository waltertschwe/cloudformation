AWSTemplateFormatVersion: '2010-09-09'
Description: A simple backend (read/write to DynamoDB) with a HTTP API endpoint using
  Amazon API Gateway.

Parameters:
  TagParameter:
    Description: The tag to assign to resources.
    Type: String
    Default: mam-secret-service
  AppPoolClientIDParameter:
    Description: Cliend id from App Pool. Used for JWT Authorizer not yet implemented.
    Type: String
    Default: ""
  AppPoolIDParameter:
    Description: App Pool Id. Used for JWT Authorizer not yet implemented.
    Type: String
    Default: ""
  PostScopeParameter:
    Description: The authorization scope supported for POST route.
    Type: String
  RouteNameParameter:
    Description: The route key for the route.
    Type: String
    Default: get-secret

Resources:
  MamSecretLambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
      Policies:
      - PolicyName: MamSecretLambdaFunctionRolePolicy
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - arn:aws:logs:*:*:*
      Tags:
      - Value:
          Ref: TagParameter
        Key: application
  MamLambdaFunctionResource:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: getSecretLambda
      Role:
        Fn::GetAtt:
        - MamSecretLambdaFunctionRole
        - Arn
      Handler: index.lambda_handler
      Code:
        ZipFile: "exports.lambda_handler = async (event) => {\nconst response = {\nstatusCode: 200,\nbody: JSON.stringify('Hello Mam Secret Service!'),\n};\nreturn response;\n};\n"
      Runtime: nodejs16.x
      Timeout: 30
      Tags:
      - Value:
          Ref: TagParameter
        Key: application
  MamSecretLambdaFunctioPermissionResource:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      FunctionName:
        Ref: MamLambdaFunctionResource
      SourceArn:
        Fn::Sub:
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/*/get-secret
        - __Stage__: "*"
          __ApiId__:
            Ref: HTTPApiResource
  HTTPApiResource:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: mam-secret-api
      Description: HTTP API integrated with lambda.
      ProtocolType: HTTP
      Target:
        Fn::GetAtt:
        - MamLambdaFunctionResource
        - Arn
      Tags:
        Value:
          Ref: TagParameter
        Key: application
  # HTTPApiAuthorizerResource:
  #   Type: AWS::ApiGatewayV2::Authorizer
  #   Properties:
  #     Name: cognito_authorizer
  #     ApiId:
  #       Ref: HTTPApiResource
  #     JwtConfiguration:
  #       Audience:
  #       - Ref: AppPoolClientIDParameter
  #       Issuer:
  #         Fn::Join:
  #         - ''
  #         - - https://cognito-idp.
  #           - Ref: AWS::Region
  #           - ".amazonaws.com/"
  #           - Ref: AppPoolIDParameter
  #     AuthorizerType: JWT
  #     IdentitySource:
  #     - "$request.header.Authorization"
  HTTPApiIntegrationResource:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: HTTPApiResource
      Description: Lambda Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
        - MamLambdaFunctionResource
        - Arn
      ConnectionType: INTERNET
      PayloadFormatVersion: '2.0'
    DependsOn:
    - HTTPApiResource
  HTTPApiPostRouteResource:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: HTTPApiResource
      # AuthorizationScopes:
      # - Ref: PostScopeParameter
      # AuthorizationType: JWT
      RouteKey:
        Fn::Join:
        - ''
        - - POST /
          - Ref: RouteNameParameter
      # AuthorizerId:
      #   Ref: HTTPApiAuthorizerResource
      OperationName: Post
      Target:
        Fn::Join:
        - "/"
        - - integrations
          - Ref: HTTPApiIntegrationResource
    DependsOn:
    - HTTPApiResource
    - HTTPApiIntegrationResource
Outputs:
  MamLambdaFunctionArn:
    Value:
      Fn::GetAtt:
      - MamLambdaFunctionResource
      - Arn
  MamLambdaFunctionName:
    Value:
      Ref: MamLambdaFunctionResource
  MamSecretLambdaFunctionRoleName:
    Value:
      Ref: MamSecretLambdaFunctionRole
